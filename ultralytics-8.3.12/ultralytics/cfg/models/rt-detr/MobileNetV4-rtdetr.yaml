# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, MobileNetV4ConvSmall, [3, 32, 0]] # 0-P1/2
  - [-1, 1, MobileNetV4ConvSmall, [32, 32, 1]] # 1-P2/4
  - [-1, 1, MobileNetV4ConvSmall, [32, 64, 2]] # 2-P3
  - [-1, 1, MobileNetV4ConvSmall, [64, 128, 3]] # 3-P4
  - [-1, 1, MobileNetV4ConvSmall, [128, 128, 4]]
  - [-1, 1, MobileNetV4ConvSmall, [128, 256, 5]]

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 6
  - [-1, 1, AIFI, [1024, 8]]
  - [-1, 1, Conv, [256, 1, 1]] # 8

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [3, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 10
  - [[-2, -1], 1, Concat, [1]]
  - [-1, 3, RepC3, [256]] # 12
  - [-1, 1, Conv, [256, 1, 1]] # 13

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [2, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 15
  - [[-2, -1], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, RepC3, [256]] # X3 (17), fpn_blocks.1

  - [-1, 1, Conv, [256, 3, 2]] # 18, downsample_convs.0
  - [[-1, 13], 1, Concat, [1]] # cat Y4
  - [-1, 3, RepC3, [256]] # F4 (20), pan_blocks.0

  - [-1, 1, Conv, [256, 3, 2]] # 21, downsample_convs.1
  - [[-1, 8], 1, Concat, [1]] # cat Y5
  - [-1, 3, RepC3, [256]] # F5 (23), pan_blocks.1

  - [[17, 20, 23], 1, RTDETRDecoder, [nc]] # Detect(P3, P4, P5)
